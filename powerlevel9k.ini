# This section is for global settings and differs from the rest as it compiled to field.
# All other sections compile to section_field

[GLOBAL]

#=======================================
# GENERAL SETTINGS
#=======================================
# Uncomment this line for ZIM installations
#INSTALLATION_PATH=~/.zim/modules/prompt/external-themes/powerlevel9k/powerlevel9k.zsh-theme

# Uncomment this line for Antigen installations
#INSTALLATION_PATH=$ANTIGEN_BUNDLES/bhilburn/powerlevel9k

# Uncomment this line to try the beta asynchronous generator
#GENERATOR="zsh-async"

#=======================================
# FONT SUPPORT
#=======================================

# NOTE:
# To use the features below, you have to install the font and make it the default font in your terminal emulator.

# For installation instructions for Powerline Fonts
# See: https://powerline.readthedocs.org/en/latest/installation/linux.html#fonts-installation

# Uncomment if you are using Awesome Powerline Font, and you prefer flat segment transitions
#MODE="flat"

# Uncomment if you are using Awesome Terminal Font
# See: https://github.com/gabrielelana/awesome-terminal-fonts
#MODE="awesome-fontconfig"

# Uncomment if you are using Awesome Patched Font
# See: https://github.com/gabrielelana/awesome-terminal-fonts/tree/patching-strategy/patched
#MODE="awesome-flat"

# Uncomment if you are using a Nerd supported font
# See: https://github.com/ryanoasis/nerd-fonts
MODE="nerdfont-complete"

#=======================================
# COLOR SCHEMES
#=======================================

COLOR_SCHEME="dark"                                         # light or dark

#=======================================
# PROMPT SEGMENTS
#=======================================
# Choose which segments to display in your prompt

# Segment list for left prompt
LEFT_PROMPT_ELEMENTS=(new os_icon host user dir background_jobs command_execution_time vi_mode)
# Segment list for right prompt
RIGHT_PROMPT_ELEMENTS=(status vcs rbenv pyenv history todo date time battery)

#=======================================
# PROMPT CONFIGURATION
#=======================================

# multiline prompt
#PROMPT_ON_NEWLINE=true                                     # double line prompt
#RPROMPT_ON_NEWLINE=true                                    # place the right prompt on second line
#MULTILINE_FIRST_PROMPT_PREFIX=""
#MULTILINE_LAST_PROMPT_PREFIX="%{%F{9}%} ❯ %{%F{default}%} "

#PROMPT_ADD_NEWLINE=true                                    # new line before prompt
#DISABLE_RPROMPT=true                                       # disable the right prompt

# segment/sub segment separators
# uncomment a set of separators below
# LEFT_SEGMENT_SEPARATOR='\uE0B0'                           # 
# RIGHT_SEGMENT_SEPARATOR='\uE0B2'                          # 
# LEFT_SUBSEGMENT_SEPARATOR='\uE0B1'                        # 
# RIGHT_SUBSEGMENT_SEPARATOR='\uE0B3'                       # 

LEFT_SEGMENT_SEPARATOR='\uE0B4'                             # 
RIGHT_SEGMENT_SEPARATOR='\uE0B6'                            # 
LEFT_SUBSEGMENT_SEPARATOR='\uE0B5'                          # 
RIGHT_SUBSEGMENT_SEPARATOR='\uE0B7'                         # 

# LEFT_SEGMENT_SEPARATOR='\uE0B8 '                          # 
# RIGHT_SEGMENT_SEPARATOR=' \uE0BA'                         #  
# LEFT_SUBSEGMENT_SEPARATOR='\uE0B9 '                       # 
# RIGHT_SUBSEGMENT_SEPARATOR=' \uE0BB'                      #  

# LEFT_SEGMENT_SEPARATOR='\uE0BC '                          # 
# RIGHT_SEGMENT_SEPARATOR=' \uE0BE'                         #  
# LEFT_SUBSEGMENT_SEPARATOR='\uE0BD '                       # 
# RIGHT_SUBSEGMENT_SEPARATOR=' \uE0BF'                      #  

# LEFT_SEGMENT_SEPARATOR='\uE0C0 '                          # 
# RIGHT_SEGMENT_SEPARATOR=' \uE0C2'                         #  
# LEFT_SUBSEGMENT_SEPARATOR='\uE0C1 '                       # 
# RIGHT_SUBSEGMENT_SEPARATOR=' \uE0C3'                      #  

# LEFT_SEGMENT_SEPARATOR='\uE0C4 '                          # 
# RIGHT_SEGMENT_SEPARATOR=' \uE0C5'                         #  
# LEFT_SUBSEGMENT_SEPARATOR=''
# RIGHT_SUBSEGMENT_SEPARATOR=''

# LEFT_SEGMENT_SEPARATOR='\uE0C6'                           # 
# RIGHT_SEGMENT_SEPARATOR='\uE0C7'                          #  
# LEFT_SUBSEGMENT_SEPARATOR=''
# RIGHT_SUBSEGMENT_SEPARATOR=''

# LEFT_SEGMENT_SEPARATOR='\uE0C8 '                          # 
# RIGHT_SEGMENT_SEPARATOR=' \uE0CA'                         # 
# LEFT_SUBSEGMENT_SEPARATOR=''
# RIGHT_SUBSEGMENT_SEPARATOR=''

# LEFT_SEGMENT_SEPARATOR='\uE0D2 '                          # 
# RIGHT_SEGMENT_SEPARATOR=' \uE0D4'                         # 
# LEFT_SUBSEGMENT_SEPARATOR=''
# RIGHT_SUBSEGMENT_SEPARATOR=''

# Uncomment this line to show the right prompt icons on the left
RPROMPT_ICON_LEFT=true

# *****  Cursor Shape  *****
# Cursor shape change support
CURSOR_SHAPE=true                                           # Set to true to enable cursor shape change on supported terminals

[CURSOR_SHAPE]
# Cursor shape can be box [], hbar _ or vbar |
NORMAL="box"
INSERT="vbar"
VISUAL="box"
DEFAULT="hbar"

#=======================================
# SYSTEM STATUS SEGMENT SETTINGS
#=======================================

[BACKGROUND_JOBS]
# If there is more than one background job, this segment will show the number of jobs. Set this to false to turn this feature off.
VERBOSE=true

# Uncomment this line to always show the jobs count (even if it's zero).
#ALWAYS_VERBOSE=true

#BACKGROUND=""
#FOREGROUND=""
ICON="\uF013 "                                              # F013 
ICON_COLOR="255"
#BOLD=true

[BATTERY]
# This segment will display your current battery status (fails gracefully on systems without a battery). It is
# supported on both OSX and Linux (note that it requires acpi on Linux).

#LOW_THRESHOLD=10                                           # Threshold to consider battery level critical.
#VERBOSE=true                                               # Display time remaining next to battery level.

#CHARGED_BACKGROUND=""
CHARGED_FOREGROUND="250"
#CHARGED_ICON=""
CHARGED_ICON_COLOR="255"
#CHARGED_BOLD=true

#CHARGING_BACKGROUND=""
CHARGING_FOREGROUND="250"
#CHARGING_ICON=""
CHARGING_ICON_COLOR="255"
#CHARGING_BOLD=true

#DISCONNECTED_BACKGROUND=""
DISCONNECTED_FOREGROUND="250"
#DISCONNECTED_ICON=""
DISCONNECTED_ICON_COLOR="255"
#DISCONNECTED_BOLD=true

#LOW_BACKGROUND=""
LOW_FOREGROUND="250"
#LOW_ICON=""
LOW_ICON_COLOR="255"
#LOW_BOLD=true

# *** choose from here for changing background by current battery level
# set if you want the background to change color with level. this overrides the state settings in the color selection.
# You can still specify foreground color and bold though.
#LEVEL_BACKGROUND=(196 202 208 214 220 226 190 154 118  82  46) # bright
#LEVEL_BACKGROUND=(124 130 136 142 148 112  76  40  34  28  22) # normal
LEVEL_BACKGROUND=(  88  94 100 106  70  34  28  22) # subdued

# STAGES accepts either a string or an array.
# Note that if you use a string for characters that are wider than a single character will cause the icon to be very
# close to the remaining time. In this case, it is better to use the array version of `STAGES`,
# so that you can add a space after.

# Uncomment only one of the following, or create your own

#STAGES="" #  \uF244  \uF243  \uF242  \uF241  \uF240
#STAGES=("\uF244 " "\uF243 " "\uF242 " "\uF241 " "\uF240 ")

STAGES="▁▂▃▄▅▆▇█"
#STAGES=("\u2581 " "\u2582 " "\u2583 " "\u2584 " "\u2585 " "\u2586 " "\u2587 " "\u2588 ")

#STAGES="▏▎▍▌▋▊▉█"
#STAGES=("\u258F " "\u258E " "\u258D " "\u258C " "\u258B " "\u258A " "\u2589 " "\u2588 ")

# Uncomment this line if you want to use this indicator
# STAGES=( "▏    ▏" "▎    ▏" "▍    ▏" "▌    ▏" "▋    ▏" "▊    ▏" "▉    ▏" "█    ▏" "█▏   ▏" "█▎   ▏" "█▍   ▏" "█▌   ▏" "█▋   ▏" "█▊   ▏" "█▉   ▏" "██   ▏" "██   ▏" "██▎  ▏" "██▍  ▏" "██▌  ▏" "██▋  ▏" "██▊  ▏" "██▉  ▏" "███  ▏" "███  ▏" "███▎ ▏" "███▍ ▏" "███▌ ▏" "███▋ ▏" "███▊ ▏" "███▉ ▏" "████ ▏" "████ ▏" "████▎▏" "████▍▏" "████▌▏" "████▋▏" "████▊▏" "████▉▏" "█████▏" )

[CONTEXT]
# The context segment (user@host string) is conditional. By default, it will only print if you are not your "normal"
# user (including if you are root), or if you are SSH"d to a remote host.
#
# To use this feature, make sure the context segment is enabled in your prompt elements (it is by default), and define
# a DEFAULT_USER in your ~/.zshrc.

#export DEFAULT_USER="$USER"                                # Username to consider a "default context" (you can also set $USER).
#ALWAYS_SHOW=true                                           # Always show this segment, including $USER and hostname.
#ALWAYS_SHOW_USER=true                                      # Always show the username, but conditionalize the hostname.
#TEMPLATE="%n@%m"                                           # Default context prompt (username@machine).

# Refer to the ZSH Documentation for all possible expansions, including deeper host depths.
# You can customize the context segment. For example, you can make it to print the full hostname by setting
#TEMPLATE="%n@`hostname -f`"

#DEPTH=                                                     # variable to change how the hostname is displayed.

# See (ZSH Manual)[http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Login-information] for details.
# The default is set to %m which will show the hostname up to the first ‘.’ You can set it to %{N}m where N is an
# integer to show that many segments of system hostname. Setting N to a negative integer will show that many segments
# from the end of the hostname.

#DEFAULT_BACKGROUND=""
#DEFAULT_FOREGROUND=""
#DEFAULT_ICON=""
#DEFAULT_ICON_COLOR=""
#DEFAULT_BOLD=true

#ROOT_BACKGROUND=""
#ROOT_FOREGROUND=""
#ROOT_ICON=""
#ROOT_ICON_COLOR=""
#ROOT_BOLD=true

[DATE]
# Show system date.

#FORMAT="%D{%d.%m.%y}"                                      # Default date format
#FORMAT="%D{%m/%d/%y}"                                      # American date format
FORMAT="%D{%d-%m-%y}"

BACKGROUND="20"
FOREGROUND="250"
ICON="\uF073"                                               # F073 
ICON_COLOR="255"
#BOLD=true

[DIR]
# The dir segment shows the current working directory. When using the "Awesome Powerline" fonts, there are additional
# glyphs, as well
SHORTEN_LENGTH=2                                            # If your shorten strategy, below, is entire directories, this field determines how many directories to leave at the end. If your shorten strategy is by character count, this field determines how many characters to allow per directory string.

#
#     Strategy Name                  Description
#     -------------                  -----------
#     Default                        Truncate whole directories from left. How many is defined by
#                                    SHORTEN_LENGTH
#     truncate_middle                Truncates the middle part of a folder. E.g. you are in a folder named
#                                    "/MySuperProjects/AwesomeFiles/BoringOffice", then it will truncated to
#                                    "/MyS..cts/Awe..les/BoringOffice", if SHORTEN_LENGTH=3 is also
#                                    set (controls the amount of characters to be left).
#     truncate_from_right            Just leaves the beginning of a folder name untouched. E.g. your folders will be
#                                    truncated like so: "/ro../Pr../office". How many characters will be untouched is
#                                    controlled by SHORTEN_LENGTH.
#     truncate_from_left             Just leaves the end of a folder name untouched. E.g. your folders will be
#                                    truncated like so: "/..ot/..ct/office". How many characters will be untouched is
#                                    controlled by SHORTEN_LENGTH.
#     truncate_to_last               Only display the folder that we are currently in.
#     truncate_to_first_and_last     Truncate middle directories from the path. How many directories will be
#                                    untouched is controlled by SHORTER_LENGTH
#     truncate_absolute              Only display the last characters of the path. How many characters will be
#                                    untouched is controlled by SHORTER_LENGTH
#     truncate_to_unique             For each parent path component, find the shortest unique beginning character
#                                    sequence.
#     truncate_with_folder_marker    Search for a file that is specified by SHORTEN_FOLDER_MARKER and
#                                    truncate everything before that (if found, otherwise stop on $HOME and ROOT).
#     truncate_with_package_name     Search for a package.json or composer.json and prints the name field to
#                                    abbreviate the directory path. The precedence and/or files could be set by
#                                    PACKAGE_FILES=(package.json composer.json). Please note that
#                                    this currently looks for .git directory to determine the root of the project.
#

SHORTEN_STRATEGY="truncate_to_unique"                       # How the directory strings should be truncated. See the table above for more information.
#SHORTEN_DELIMITER=".."                                     # Delimiter to use in truncated strings. This can be any string you choose, including an empty string if you wish to have no delimiter.
#SHORTEN_FOLDER_MARKER='.shorten_folder_marker'             # Filename to use to indicate where to shorten the path when using "truncate_with_folder_marker".
#SHORTEN_DELIMITER="\u2026"                                 # …
SHORTEN_DELIMITER="…"                                       # …

HOME_FOLDER_ABBREVIATION='~'

#PATH_ABSOLUTE=true                                         # uncomment this if you want to use absolute paths instead of home folder abbreviations.
#OMIT_FIRST_CHARACTER=true                                  # omit the first character (usually a slash that gets replaced if you set PATH_SEPARATOR)

# Unfortunately, you cannot use $(printIcon "") here as it fails.
# Unicode \uXXXX codes are printed literally as XXX.
#PATH_SEPARATOR=$(echo -n " \uE0B1 ")                       # customize the directory separator E0B1 
#PATH_SEPARATOR="  "

SHOW_WRITABLE=true

#TODO
#HYPERLINK=true

DEFAULT_BACKGROUND="27"
DEFAULT_FOREGROUND="252"
DEFAULT_ICON="\uF115"                                       # E5FF  / F07B  / F115 
DEFAULT_ICON_COLOR="255"
#DEFAULT_BOLD=true

HOME_BACKGROUND="27"
HOME_FOREGROUND="252"
HOME_ICON="\uF46D"                                          # F015  / F46D 
HOME_ICON_COLOR="255"
#HOME_BOLD=true

HOME_SUBFOLDER_BACKGROUND="27"
HOME_SUBFOLDER_FOREGROUND="252"
HOME_SUBFOLDER_ICON="\uF114"                                # E5FE  / F07C  / F114 
HOME_SUBFOLDER_ICON_COLOR="255"
#HOME_SUBFOLDER_BOLD=true

NOT_WRITABLE_BACKGROUND="124"
NOT_WRITABLE_FOREGROUND="252"
#NOT_WRITABLE_ICON=""
NOT_WRITABLE_ICON_COLOR="255"
#NOT_WRITABLE_BOLD=true

ETC_BACKGROUND="55"
ETC_FOREGROUND="252"
#ETC_ICON=""
ETC_ICON_COLOR="255"
#ETC_BOLD=true

PATH_HIGHLIGHT_FOREGROUND="226"
PATH_HIGHLIGHT_BOLD=true

PATH_SEPARATOR_FOREGROUND="226"

[DIR_WRITEABLE]
# Displays a lock icon, if you do not have write permissions on the current folder.

#BACKGROUND=""
#FOREGROUND=""
ICON="\uF023"                                               # F023 
#ICON_COLOR=""
#BOLD=true

[DISK_USAGE]
# The disk_usage segment will show the usage level of the partition that your current working directory resides in.

#ONLY_WARNING=false                                         # Hide the segment except when usage levels have hit warning or critical levels.
#WARNING_LEVEL=90                                           # The usage level that triggers a warning state.
#CRITICAL_LEVEL=95                                          # The usage level that triggers a critical state.

#NORMAL_BACKGROUND=""
#NORMAL_FOREGROUND=""
NORMAL_ICON="\uF0A0"                                        # F0A0 
#NORMAL_ICON_COLOR=""
#NORMAL_BOLD=true

#WARNING_BACKGROUND=""
#WARNING_FOREGROUND=""
WARNING_ICON="\uF0A0"                                       # F0A0 
#WARNING_ICON_COLOR=""
#WARNING_BOLD=true

#CRITICAL_BACKGROUND=""
#CRITICAL_FOREGROUND=""
CRITICAL_ICON="\uF0A0"                                      # F0A0 
#CRITICAL_ICON_COLOR=""
#CRITICAL_BOLD=true

[HISTORY]
# The command number for the current line.

BACKGROUND="18"
FOREGROUND="250"
ICON="\uF464"                                               # E29A  / F16C  / F1DC  / F464 
ICON_COLOR="255"
#BOLD=true

[HOST]
# This segment displays the current host.

LOCAL_BACKGROUND="22"
LOCAL_FOREGROUND="250"
LOCAL_ICON="\uF26C"                                         # F108  / F109  / F26C  / F67C 
LOCAL_ICON_COLOR="255"
LOCAL_BOLD=true

REMOTE_BACKGROUND="52"
REMOTE_FOREGROUND="250"
#REMOTE_ICON=""
REMOTE_ICON_COLOR="255"
REMOTE_BOLD=true

[IP]
# This segment tries to examine all currently used network interfaces and prints the first address it finds.

#INTERFACE="None"                                           # The NIC for which you wish to display the IP address. Example: eth0.

#BACKGROUND=""
#FOREGROUND=""
ICON="\uF424"                                               # F1EB  / F424 
#ICON_COLOR=""
#BOLD=true

[LOAD]
# Your machine's load averages.

#DEFAULT_BACKGROUND=""
#DEFAULT_FOREGROUND=""
DEFAULT_ICON="\uF463 "                                      # E234  / F080  / F1FE  / F463 
#DEFAULT_ICON_COLOR=""
#DEFAULT_BOLD=true

#WARNING_BACKGROUND=""
#WARNING_FOREGROUND=""
WARNING_ICON="\uF463 "                                      # E234  / F080  / F1FE  / F463 
#WARNING_ICON_COLOR=""
#WARNING_BOLD=true

#CRITICAL_BACKGROUND=""
#CRITICAL_FOREGROUND=""
CRITICAL_ICON="\uF463 "                                     # E234  / F080  / F1FE  / F463 
#CRITICAL_ICON_COLOR=""
#CRITICAL_BOLD=true

[OS_ICON]
# Display a nice little icon, depending on your operating system.

BACKGROUND="54"
FOREGROUND="16"
#ICON=""
ICON_COLOR="252"
#BOLD=true

[PUBLIC_IP]
# This segment will display your public IP address. There are several methods of obtaining this information and by
# default it will try all of them starting with the most efficient. You can also specify which method you would like
# it to use. The methods available are dig using opendns, curl, or wget. The host used for wget and curl is
# http://ident.me by default but can be set to another host if you prefer.

#FILE="/tmp/p8k_public_ip"                                  # This is the file your public IP is cached in.
#HOST="http://ident.me"                                     # This is the default host to get your public IP.
#TIMEOUT=300                                                # The amount of time in seconds between refreshing your cached IP.
#METHODS=(dig curl wget)                                    # These methods in that order are used to refresh your IP.
#NONE="None"                                                # The string displayed when an IP was not obtained

# Set the following variable to the VPN interface for this to work
VPN_INTERFACE="ppp0"

#BACKGROUND=""
#FOREGROUND=""
ICON="\uF0AC"                                               # F0AC 
#ICON_COLOR=""
#BOLD=true

[RAM]
# Show free RAM.

ELEMENTS="Both"                                             # Specify free or used to only show one or the other rather than both.

#BACKGROUND=""
#FOREGROUND=""
ICON="\uF2DB"                                               # F2DB 
#ICON_COLOR=""
#BOLD=true

[ROOT_INDICATOR]
# An indicator if the user has superuser status.

[SSH]
# Indicates whether or not you are in an SSH session.

#BACKGROUND=""
#FOREGROUND=""
ICON="\uF489"                                               # 
#ICON_COLOR=""
#BOLD=true

[STATUS]
# This segment shows the return code of the last command.

#CROSS=true                                                 # uncomment this line to use a cross instead of a carriage return note that this hides the error code and pipestatus
#OK=false                                                   # uncomment this line to hide status segment when ok
#SHOW_PIPESTATUS=false                                      # uncomment this line to hide pipe status results
#VERBOSE=false                                              # uncomment this line to hide this segment when the last command completed successfully by setting OK_IN_NON_VERBOSE to false.
#OK_IN_NON_VERBOSE=true                                     # uncomment this line to show this segment when the last command completed successfully in non-verbose mode.

OK_BACKGROUND="236"                                         # (note: only, if verbose is true)
OK_FOREGROUND="250"                                         # (note: only, if verbose is true)
OK_ICON="\uF42E"                                            # F00C  / F42E  (note: only, if verbose is true)
OK_ICON_COLOR="28"                                          # (note: only, if verbose is true)
#OK_BOLD=true

ERROR_BACKGROUND="236"
ERROR_FOREGROUND="250"
ERROR_ICON="\uF467"                                         # F00D  / F467 
ERROR_ICON_COLOR="160"
#ERROR_BOLD=true

ERROR_CR_BACKGROUND="236"
ERROR_CR_FOREGROUND="250"
ERROR_CR_ICON="\u21B5"                                      # 21B5 ↵
ERROR_CR_ICON_COLOR="160"
#ERROR_CR_BOLD=true

[SWAP]
# Prints the current swap size.

#BACKGROUND=""
#FOREGROUND=""
ICON="\uF705"                                               # E705  / E706  / F464 
#ICON_COLOR=""
#BOLD=true

[TIME]
# Show system time.

FORMAT="%D{%H:%M:%S}"                                       # ZSH time format to use in this segment.
#FORMAT="%D{%S:%M:%H}"                                      # Reversed time format
#FORMAT="%D{%H:%M:%S \uf073  %d.%m.%y}"                     # Output time, date, and a symbol  from the "Awesome Powerline Font" set

BACKGROUND="21"
FOREGROUND="250"
ICON="\uF43A"                                               # F43A 
ICON_COLOR="255"
#BOLD=true

[TODO]
BACKGROUND="19"
FOREGROUND="250"
ICON="\uF046"                                               # F133  / F046 
ICON_COLOR="255"
BOLD=true

[USER]
# This segment displays the current user.

DEFAULT_BACKGROUND="21"
DEFAULT_FOREGROUND="250"
DEFAULT_ICON="\uF2C0"                                       # F007  / F2C0 
DEFAULT_ICON_COLOR="255"
DEFAULT_BOLD=true

ROOT_BACKGROUND="124"
ROOT_FOREGROUND="250"
ROOT_ICON="\uF292 "                                         # E614  / F198  / F292 
ROOT_ICON_COLOR="255"
ROOT_BOLD=true

SUDO_BACKGROUND="166"
SUDO_FOREGROUND="250"
SUDO_ICON="\uF2C0"                                          # F09C  / F13E 
SUDO_ICON_COLOR="255"
SUDO_BOLD=true

SUDOER_BACKGROUND="28"
SUDOER_FOREGROUND="250"
SUDOER_ICON="\uF023"                                        # F023 
SUDOER_ICON_COLOR="255"
SUDOER_BOLD=true

[VI_MODE]
# This segment shows ZSH"s current input mode. Note that this is only useful if you are using the ZSH Line Editor (VI
# mode). You can enable this either by .zshrc configuration or using a plugin, like Oh-My-Zsh"s vi-mode plugin.
# Visual mode only works if the user has installed [zsh-vimode-visual](https://github.com/b4b4r07/zsh-vimode-visual)

INSERT_STRING=""
INSERT_BACKGROUND="250"
INSERT_FOREGROUND="24"
INSERT_ICON="\uF090"                                        # F090  / E795  / F489 
#INSERT_ICON_COLOR=""

NORMAL_STRING=""
NORMAL_BACKGROUND="106"
NORMAL_FOREGROUND="22"
NORMAL_ICON="\uF120"                                        # E7A2  / F120 
#NORMAL_ICON_COLOR=""

VISUAL_STRING=""
VISUAL_BACKGROUND="214"
VISUAL_FOREGROUND="94"
VISUAL_ICON="\uF489"                                        # F489 
#VISUAL_ICON_COLOR=""

[VPN_IP]
# Set the following variable to the VPN interface for this to work
INTERFACE="ppp0"

#BACKGROUND=""
#FOREGROUND=""
#ICON=""
#ICON_COLOR=""
#BOLD=true

#=======================================
# DEVELOPMENT ENVIRONMENT SEGMENTS
#=======================================

[VCS]
# By default, the vcs segment will provide quite a bit of information.
#HIDE_BRANCH_ICON=true                                      # set to hide the branch icon from the segment.
#SHOW_CHANGESET=true                                        # set to display the hash/changeset in the segment.
#CHANGESET_HASH_LENGTH=6                                    # How many characters of the hash/changeset to display in the segment.
SHOW_SUBMODULE_DIRTY=true                                   # set to reflect submodule status in the top-level repository prompt.
#HIDE_TAGS=false                                            # set to stop tags being displayed in the segment.

# *****  vcs symbols  *****
# The vcs segment uses various symbols to tell you the state of your repository. These symbols depend on your
# installed font and selected MODE from the Installation section above.

#
#    Compatible  Powerline   Awesome            Explanation
#    ↑4          ↑4          4 (\uf01b)        Number of commits your repository is ahead of your remote branch
#    ↓5          ↓5          5 (\uf01a)        Number of commits your repository is behind of your remote branch
#    ⍟3          ⍟3          3 (\uf48d)        Number of stashes, here 3.
#    ●           ●            (\uf06a)         There are unstaged changes in your working copy
#    ✚           ✚           (\uf055)         There are staged changes in your working copy
#    ?           ?            (\uf059)         There are files in your working copy unknown to your repository
#    →          →           (\uf403)         The name of your branch differs from its tracking branch.
#    ☿          ☿            (\uf462)          A mercurial bookmark is active.
#    @            (\ue0a0)   (\uf418)         Branch Icon
#    None        None        2c3705 (\uf417)   The current commit hash. Here "2c3705"
#    None        None         (\uf406)         Repository is a git repository
#    None        None         (\uf0c3)         Repository is a Mercurial repository
#

# The VCS segment differs from other segments at the moment as some of the
# icons are defined at runtime.

# VCS color definitions

CLEAN_BACKGROUND='28'
CLEAN_FOREGROUND='250'
CLEAN_ICON_COLOR="255"

UNTRACKED_BACKGROUND='208'
UNTRACKED_FOREGROUND='250'
UNTRACKED_ICON_COLOR="255"

MODIFIED_BACKGROUND='124'
MODIFIED_FOREGROUND='250'
MODIFIED_ICON_COLOR="255"

# VCS icon definitions

GIT_ICON="\uF406 "                                          # F406 
GIT_BITBUCKET_ICON="\uF171 "                                # F171 
GIT_GITHUB_ICON="\uF408 "                                   # F408 
GIT_GITLAB_ICON="\uF296 "                                   # F296 

HG_ICON="\uF0C3 "                                           # F0C3 
SVN_ICON="\uE72D "                                          # E72D 

BOOKMARK_ICON="\uF461 "                                     # F461 
BRANCH_ICON="\uF418 "                                       # F418 
COMMIT_ICON="\uF417 "                                       # F417 
INCOMING_CHANGES_ICON="\uF01A "                             # F01A 
OUTGOING_CHANGES_ICON="\uF01B "                             # F01B 
REMOTE_BRANCH_ICON="\uF47F "                                # F47F 
STAGED_ICON="\uF055"                                        # F055 
STASH_ICON="\uF48D "                                        # F48D 
TAG_ICON="\uF02B "                                          # F02B 
UNSTAGED_ICON="\uF06A"                                      # F06A 
UNTRACKED_ICON="\uF059"                                     # F059 

#=======================================
# LANGUAGE SEGMENTS
#=======================================

#---------------------------------------
# GoLang Segments
#---------------------------------------

[GO_VERSION]
# Show the current GO version

#VERSION_BACKGROUND=""
#VERSION_FOREGROUND=""
VERSION_ICON="\uE626"                                       # E626 
#VERSION_ICON_COLOR=""
#VERSION_BOLD=true

#---------------------------------------
# Javascript / Node.js Segments
#---------------------------------------

[NODE_VERSION]
# Show the version number of the installed Node.js

[NODE_ENV]
# Prompt for displaying node version and environment name.
# See: https://github.com/ekalinin/nodeenv

#BACKGROUND=""
#FOREGROUND=""
ICON="\uE617 "                                              # E617 
#ICON_COLOR=""
#BOLD=true

#NODE_VERSION_BACKGROUND=""
#NODE_VERSION_FOREGROUND=""
NODE_VERSION_ICON="\uE617 "                                 # E617 
#NODE_VERSION_ICON_COLOR=""
#NODE_VERSION_BOLD=true

[NVM]
# Show the version of Node that is currently active, if it differs from the version used by NVM.

#---------------------------------------
# PHP Segments
#---------------------------------------

[PHP_VERSION]
# Show the current PHP version.

[SYMFONY_TESTS]
# The symfony_tests segment shows a ratio of "real" classes vs test classes in your source code. This is just a very
# simple ratio, and does not show your code coverage or any sophisticated stats. All this does is count your source
# files and test files, and calculate the ratio between them. Just enough to give you a quick overview about the test
# situation of the project you are dealing with.

[SYMFONY_VERSION]
# Show the current symfony version, if you are in a symfony-Project dir.

#BACKGROUND=""
#FOREGROUND=""
ICON="\uE757"                                               # E757 
#ICON_COLOR=""
#BOLD=true

#---------------------------------------
# Python Segments
#---------------------------------------

[ANACONDA]
# This segment shows your active anaconda environment. It relies on either the CONDA_ENV_PATH or the CONDA_PREFIX
# (depending on the conda version) environment variable to be set which happens when you properly source activate
# an environment.

#LEFT_DELIMITER="("
#RIGHT_DELIMITER=")"

#BACKGROUND=""
#FOREGROUND=""                                              # Note that you can modify the _FOREGROUND color without affecting the icon color.
#ICON=""
#ICON_COLOR=""
#BOLD=true

[PYENV]
# Your active python version as reported by the first word of pyenv version. Note that the segment is not displayed if
# that word is system i.e. the segment is inactive if you are using system python.

#BACKGROUND=""
#FOREGROUND=""
ICON="\uE235"                                               # E235 
#ICON_COLOR=""
#BOLD=true

[VIRTUALENV]
# Your Python VirtualEnv.
# See: https://virtualenv.pypa.io/en/latest/

#---------------------------------------
# Ruby Segments
#---------------------------------------

[CHRUBY]
# Ruby environment information using chruby (if one is active).

[RBENV]
# This segment shows the version of Ruby being used when using rbenv to change your current Ruby stack. It figures out
# the version being used by taking the output of the rbenv version-name command. If rbenv is not in $PATH, nothing
# will be shown. If the current Ruby version is the same as the global Ruby version, nothing will be shown.

#BACKGROUND=""
#FOREGROUND=""
ICON="\uF219 "                                              # F219 
#ICON_COLOR=""
#BOLD=true

[RSPEC_STATS]
# The rspec_stats segment shows a ratio of "real" classes vs test classes in your source code. This is just a very
# simple ratio, and does not show your code coverage or any sophisticated stats. All this does is count your source
# files and test files, and calculate the ratio between them. Just enough to give you a quick overview about the test
# situation of the project you are dealing with.

#---------------------------------------
# Rust Segments
#---------------------------------------

[RUST_VERSION]
# Display the current rust version and logo.  (\uE7A8)

#BACKGROUND=""
#FOREGROUND=""
ICON="\uE7A8"                                               # E7A8 
#ICON_COLOR=""
#BOLD=true

#---------------------------------------
# Swift Segments
#---------------------------------------

[SWIFT_VERSION]
# Show the version number of the installed Swift.

#BACKGROUND=""
#FOREGROUND=""
ICON="\uE755"                                               # E755 
#ICON_COLOR=""
#BOLD=true

#=======================================
# CLOUD SEGMENTS
#=======================================

#---------------------------------------
# AWS Segments
#---------------------------------------

[AWS]
# If you would like to display the current AWS profile, add the aws segment to one of the prompts, and define
# DEFAULT_PROFILE in your ~/.zshrc

#DEFAULT_PROFILE=""                                         # your AWS profile name

#BACKGROUND=""
#FOREGROUND=""
ICON="\uF270"                                               # F270 
#ICON_COLOR=""
#BOLD=true

[AWS_EB_ENV]
# The current Elastic Beanstalk Environment.

#ENV_BACKGROUND=""
#ENV_FOREGROUND=""
ENV_ICON="\uF1BD  "                                         # F1BD 
#ENV_ICON_COLOR=""
#ENV_BOLD=true

#---------------------------------------
# Docker Segments
#---------------------------------------

[DOCKER_MACHINE]
# The current Docker Machine.

#BACKGROUND=""
#FOREGROUND=""
ICON="\uF0AE"                                               # F0AE 
#ICON_COLOR=""
#BOLD=true

#=======================================
# OTHER SEGMENTS
#=======================================

[COMMAND_EXECUTION_TIME]
# Display the time the previous command took to execute if the time is above
# COMMAND_EXECUTION_THRESHOLD.
# The time is formatted to be "human readable", and so scales the units based on the length of execution time.
# If you want more precision, just set the COMMAND_EXECUTION_PRECISION field.

THRESHOLD=3                                                 # Threshold above which to print this segment. Can be set to 0 to always print.
PRECISION=2                                                 # Number of digits to use in the fractional part of the time value.

#BACKGROUND=""
#FOREGROUND=""
#ICON=""
#ICON_COLOR=""
#BOLD=true

[DROPBOX]
#BACKGROUND=""
#FOREGROUND=""
ICON="\uF16B"                                               # F16B 
#ICON_COLOR=""
#BOLD=true

[KUBECONTEXT]
#BACKGROUND=""
#FOREGROUND=""
ICON="\u2388"                                               # 2388 ⎈
#ICON_COLOR=""
#BOLD=true

[TEST_STATS]
#AVG_BACKGROUND=""
#AVG_FOREGROUND=""
#AVG_ICON=""
#AVG_ICON_COLOR=""
#AVG_BOLD=true

#BAD_BACKGROUND=""
#BAD_FOREGROUND=""
#BAD_ICON=""
#BAD_ICON_COLOR=""
#BAD_BOLD=true

#GOOD_BACKGROUND=""
#GOOD_FOREGROUND=""
#GOOD_ICON=""
#GOOD_ICON_COLOR=""
#GOOD_BOLD=true

#---------------------------------------
# My Custom Segments
#---------------------------------------
#[CUSTOM_COMMAND]
# The custom_... segment allows you to turn the output of a custom command into a prompt segment. As an example, if
# you wanted to create a custom segment to display your WiFi signal strength, you might define a custom segment called
# custom_wifi_signal like this:
#CUSTOM_WIFI_SIGNAL="echo signal: \$(nmcli device wifi | grep yes | awk "{print \$8}")"
#CUSTOM_WIFI_SIGNAL_BACKGROUND="blue"
#CUSTOM_WIFI_SIGNAL_FOREGROUND="yellow"

# If you prefer, you can also define the function in your .zshrc rather than putting it in-line with the variable
# export, as shown above. Just don"t forget to invoke your function from your segment! Example code that achieves the
# same result as the above:

#zsh_wifi_signal(){
#    local signal=$(nmcli device wifi | grep yes | awk "{print $8}")
#    local color="%F{yellow}"
#    [[ $signal -gt 75 ]] && color="%F{green}"
#    [[ $signal -lt 50 ]] && color="%F{red}"
#    echo -n "%{$color%}\uf230  $signal%{%f%}" # \uf230 is 
#}
#CUSTOM_WIFI_SIGNAL="zsh_wifi_signal"

[NEW]
BACKGROUND="54"
#FOREGROUND=""
ICON="\uF422"                                               # F422 
#ICON_COLOR=""
