# vim:ft=zsh ts=2 sw=2 sts=2 et fenc=utf-8
################################################################
# @title powerlevel9k Segment - Context
# @source [powerlevel9k](https://github.com/bhilburn/powerlevel9k)
##

(){
  # Set the right locale to protect special characters
  local LC_ALL="" LC_CTYPE="en_US.UTF-8"
  ################################################################
  # Register segment
  # Parameters:
  #   segment_name  context  background  foreground  Generic  Flat/Awesome-Patched  Awesome-FontConfig  Awesome-Mapped-FontConfig  NerdFont
  #
  p9k::register_segment 'CONTEXT' 'ROOT'        "${DEFAULT_COLOR}" "yellow" ""  ""  ""  ""  ""  ""
  p9k::register_segment 'CONTEXT' 'SUDO'        "${DEFAULT_COLOR}" "yellow" ""  ""  ""  ""  ""  ""
  p9k::register_segment 'CONTEXT' 'DEFAULT'     "${DEFAULT_COLOR}" "yellow" ""  ""  ""  ""  ""  ""
  p9k::register_segment 'CONTEXT' 'REMOTE'      "${DEFAULT_COLOR}" "yellow" ""  ""  ""  ""  ""  ""
  p9k::register_segment 'CONTEXT' 'REMOTE_SUDO' "${DEFAULT_COLOR}" "yellow" ""  ""  ""  ""  ""  ""

  ################################################################
  # Register segment default values
  p9k::set_default P9K_CONTEXT_ALWAYS_SHOW false
  p9k::set_default P9K_CONTEXT_ALWAYS_SHOW_USER false
  p9k::set_default P9K_CONTEXT_TEMPLATE "%n@%m"
}

################################################################
# @description
#   Displays the context - user@hostname (who am I and where am I).
##
# @args
#   $1 string Alignment - left | right
#   $2 integer Segment index
#   $3 boolean Whether the segment should be joined
##
# @note
#    If ${DEFAULT_USER} is not set, this prompt segment will always print.
##
prompt_context() {
  local current_state="DEFAULT"
  local content=""

  if [[ "${P9K_CONTEXT_ALWAYS_SHOW:-}" == true ]] || [[ "${USER}" != "${DEFAULT_USER:-}" ]] || [[ -n "${SSH_CLIENT:-}" || -n "${SSH_TTY:-}" ]]; then
    if [[ "${USER}" == "${DEFAULT_USER:-}" ]]; then
      content="${P9K_CONTEXT_TEMPLATE_DEFAULT_USER-${P9K_CONTEXT_TEMPLATE}}"
    else
      content="${P9K_CONTEXT_TEMPLATE}"
    fi
  elif [[ "$P9K_CONTEXT_ALWAYS_SHOW_USER" == true ]]; then
    content="${USER}"
  else
    return
  fi

  if [[ $(print -P "%#") == '#' ]]; then
    current_state="ROOT"
  elif [[ -n "${SSH_CLIENT:-}" || -n "${SSH_TTY:-}" ]]; then
    if [[ -n "${SUDO_COMMAND:-}" ]]; then
      current_state="REMOTE_SUDO"
    else
      current_state="REMOTE"
    fi
  elif [[ -n "${SUDO_COMMAND:-}" ]]; then
    current_state="SUDO"
  fi

  p9k::prepare_segment "$0" "${(U)current_state}" $1 "$2" $3 "${content}"
}
