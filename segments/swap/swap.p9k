# vim:ft=zsh ts=2 sw=2 sts=2 et fenc=utf-8
################################################################
# @title powerlevel9k Segment - Swap
# @source [powerlevel9k](https://github.com/bhilburn/powerlevel9k)
##

(){
  # Set the right locale to protect special characters
  local LC_ALL="" LC_CTYPE="en_US.UTF-8"
  ################################################################
  # Register segment
  # Parameters:
  #   segment_name  context  background  foreground  Generic  Flat/Awesome-Patched  Awesome-FontConfig  Awesome-Mapped-FontConfig  NerdFont
  #                                                                                                                           
  p9k::register_segment "SWAP" "" "yellow" "$DEFAULT_COLOR"  'SWP'  $'\uE87D'  $'\uF0E4'  '\u'${CODEPOINT_OF_AWESOME_DASHBOARD}  $'\uF464'
}

################################################################
# @description
#   Display information the swap file.
##
# @args
#   $1 string Alignment - left | right
#   $2 integer Segment index
#   $3 boolean Whether the segment should be joined
##
prompt_swap() {
  local ROOT_PREFIX="${4}"
  local swap_used=0
  local base=''

  if [[ "${__P9K_OS}" == "OSX" ]]; then
    local raw_swap_used
    typeset -F 2 swap_used
    if [[ "$(sysctl vm.swapusage)" =~ "used = ([0-9,.]+)([A-Z]+)" ]]; then
      swap_used=${${match[1]}//,/.}
      base="${match[2]}"
    fi
  else
    local raw_data
    raw_data="$(<${ROOT_PREFIX}/proc/meminfo)"
    [[ "${raw_data}" =~ "SwapTotal:[ ]+([0-9]+)" ]] && swap_total=${match[1]}
    [[ "${raw_data}" =~ "SwapFree:[ ]+([0-9]+)" ]] && swap_free=${match[1]}
    swap_used=$(( swap_total - swap_free ))
    base='K'
  fi

  p9k::prepare_segment "$0" "" $1 "$2" $3 "$(p9k::print_size_human_readable "$swap_used" $base)"
}
