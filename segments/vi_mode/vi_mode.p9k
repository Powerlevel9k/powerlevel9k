# vim:ft=zsh ts=2 sw=2 sts=2 et fenc=utf-8
################################################################
# @title powerlevel9k Segment - VI Mode
# @source [powerlevel9k](https://github.com/bhilburn/powerlevel9k)
##

() {
  # Set the right locale to protect special characters
  local LC_ALL="" LC_CTYPE="en_US.UTF-8"
  ################################################################
  # Register segment
  # Parameters:
  #   segment_name  context  background  foreground  Generic  Flat/Awesome-Patched  Awesome-FontConfig  Awesome-Mapped-FontConfig  NerdFont
  p9k::register_segment  "VI_MODE" "NORMAL" "${DEFAULT_COLOR}" "white"  ''  ''  ''  ''  ''
  p9k::register_segment  "VI_MODE" "INSERT" "${DEFAULT_COLOR}" "blue"   ''  ''  ''  ''  ''
  p9k::register_segment  "VI_MODE" "SEARCH" "${DEFAULT_COLOR}" "purple" ''  ''  ''  ''  ''
  p9k::register_segment  "VI_MODE" "VISUAL" "${DEFAULT_COLOR}" "orange1" ''  ''  ''  ''  ''

  ################################################################
  # Register segment default values
  p9k::set_default P9K_VI_MODE_NORMAL_STRING 'NORMAL'
  p9k::set_default P9K_VI_MODE_INSERT_STRING 'INSERT'
  p9k::set_default P9K_VI_MODE_SEARCH_STRING 'SEARCH'
  p9k::set_default P9K_VI_MODE_VISUAL_STRING 'VISUAL'
}

###############################################################
# Vi Mode: show editing mode (NORMAL|INSERT)
# Parameters:
#   * $1 Alignment: string - left|right
#   * $2 Index: integer
#   * $3 Joined: bool - If the segment should be joined
################################################################
# @description
#   Display information about the editing mode - Normal | Insert | Visual.
##
# @args
#   $1 string Alignment - left | right
#   $2 integer Segment index
#   $3 boolean Whether the segment should be joined
##
# @note
#   Visual mode only works if the user has installed zsh-vimode-visual.
##
# @requires
#   [zsh-vimode-visual](https://github.com/b4b4r07/zsh-vimode-visual)
##
prompt_vi_mode() {
  local current_state
  local vi_mode_string
  typeset -gAH vi_states
  case "${VIM_MODE_KEYMAP:-$KEYMAP}" in
    vicmd)
      current_state="NORMAL"
      vi_mode_string="${P9K_VI_MODE_NORMAL_STRING}"
      ;;
    vivis)
      current_state="VISUAL"
      vi_mode_string="${P9K_VI_MODE_VISUAL_STRING}"
      ;;
    isearch)
      current_state="SEARCH"
      vi_mode_string="${P9K_VI_MODE_SEARCH_STRING}"
      ;;
    main|viins|*)
      current_state="INSERT"
      vi_mode_string="${P9K_VI_MODE_INSERT_STRING}"
      ;;
  esac

  # NOTE: The display test at the end of the next line ensures that the segment_state is displayed if an icon is defined
  #       even if the string is set to an empty string. This allows you to define and use icons for this segment instead
  #       of the default text string and also bypasses the ugly icon as content string. As a bonus, you can set both!
  p9k::prepare_segment "$0" "${current_state}" "$1" "$2" "$3" "${vi_mode_string}" \
      "[[ -n \"$__P9K_ICONS[VI_MODE_${current_state}]\" || -n \"${vi_mode_string}\" ]]"
}

function rebuildViMode() {
  # Re-Init segment
  for alignment in left right; do
    for index in $(p9k::find_in_array "vi_mode" "${__P9K_DATA[${alignment}_segments]}"); do
      local joined=false
      local segmentMetaVar="P9K_${(U)alignment}_PROMPT_ELEMENTS[${index}]"
      p9k::segment_is_tagged_as "joined" ${${(P)segmentMetaVar}%%::*} && joined=true
      prompt_vi_mode "${alignment}" "${index}" "${joined}"
      __p9k_refresh_cache_item "${__P9K_DATA[SEGMENT_RESULT]}"
    done
  done

  __p9k_render "true"
}

###############################################################
# This function returns the correct cursorline
#
# Parameters:
#   * $1 Shape: string - box, hbar or vbar
function cursorShape() {
  typeset -gAH CS_konsole # iTerm and yakuake use the same definition
  CS_konsole=(
    "prefix"      "\033]50;CursorShape="
    "box"         "0"
    "vbar"        "1"
    "hbar"        "2"
    "suffix"      "\x7"
  )
  typeset -gAH CS_xterm # tmux uses the same definition
  CS_xterm=(
    "prefix"      "\033["
    "box"         "1"
    "vbar"        "3"
    "hbar"        "5"
    "suffix"      " q"
  )
  typeset -gAH CS_xterm_noblink
  CS_xterm_noblink=(
    "prefix"      "\033["
    "box"         "2"
    "vbar"        "4"
    "hbar"        "6"
    "suffix"      " q"
  )
  typeset -gAH CS_rxvt # gnometerm uses the same definition
  CS_rxvt=(
    "prefix"      "\033["
    "box"         "1"
    "vbar"        "5"
    "hbar"        "3"
    "suffix"      " q"
  )
  typeset -gAH CS_rxvt_noblink
  CS_rxvt_noblink=(
    "prefix"      "\033["
    "box"         "2"
    "vbar"        "6"
    "hbar"        "4"
    "suffix"      " q"
  )
  local cursor_shape_line=""

  case ${__P9K_TERMINAL} in
    konsole | iterm | yakuake)
      cursor_shape_line=$CS_konsole[prefix]$CS_konsole[$1]$CS_konsole[suffix]
    ;;
    gnometerm | rxvt | termite | tmux)
      if [[ $P9K_CURSOR_NOBLINK ]]; then
        cursor_shape_line=$CS_rxvt_noblink[prefix]$CS_rxvt_noblink[$1]$CS_rxvt_noblink[suffix]
      else
        cursor_shape_line=$CS_rxvt[prefix]$CS_rxvt[$1]$CS_rxvt[suffix]
      fi
    ;;
    xterm)
      if [[ $P9K_CURSOR_NOBLINK ]]; then
        cursor_shape_line=$CS_xterm_noblink[prefix]$CS_xterm_noblink[$1]$CS_xterm_noblink[suffix]
      else
        cursor_shape_line=$CS_xterm[prefix]$CS_xterm[$1]$CS_xterm[suffix]
      fi
    ;;
  esac

  [[ -n ${cursor_shape_line} ]] && echo -en "$cursor_shape_line"
}

###############################################################
function zle-line-init {
  rebuildViMode

  # change cursor shape
  if [[ $P9K_CURSOR_SHAPE ]]; then
    case "${VIM_MODE_KEYMAP:-$KEYMAP}" in
      vicmd)      cursorShape ${P9K_CURSOR_SHAPE_NORMAL};;
      viins|main) cursorShape ${P9K_CURSOR_SHAPE_INSERT};;
      vivis)      cursorShape ${P9K_CURSOR_SHAPE_VISUAL};;
      isearch)    cursorShape ${P9K_CURSOR_SHAPE_SEARCH};;
      *)          cursorShape ${P9K_CURSOR_SHAPE_DEFAULT};;
    esac
  fi
}

###############################################################
function zle-line-finish {
  if [[ $P9K_CURSOR_SHAPE ]]; then
    cursorShape ${P9K_CURSOR_SHAPE_DEFAULT}
  fi
}

###############################################################
function zle-keymap-select {
  rebuildViMode

  # change cursor shape
  if [[ $P9K_CURSOR_SHAPE ]]; then
    case "${VIM_MODE_KEYMAP:-$KEYMAP}" in
      vicmd)      cursorShape ${P9K_CURSOR_SHAPE_NORMAL};;
      viins|main) cursorShape ${P9K_CURSOR_SHAPE_INSERT};;
      vivis)      cursorShape ${P9K_CURSOR_SHAPE_VISUAL};;
      isearch)    cursorShape ${P9K_CURSOR_SHAPE_SEARCH};;
      *)          cursorShape ${P9K_CURSOR_SHAPE_DEFAULT};;
    esac
  fi
}

###############################################################
function register_zle {
  zle -N zle-line-init
  zle -N zle-line-finish
  zle -N zle-keymap-select
}

register_zle
