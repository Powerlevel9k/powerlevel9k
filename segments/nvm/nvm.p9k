# vim:ft=zsh ts=2 sw=2 sts=2 et fenc=utf-8
################################################################
# @title powerlevel9k Segment - NVM
# @source [powerlevel9k](https://github.com/bhilburn/powerlevel9k)
##

(){
  # Set the right locale to protect special characters
  local LC_ALL="" LC_CTYPE="en_US.UTF-8"
  ################################################################
  # Register segment icon
  # Parameters:
  #   segment_name  context  background  foreground  Generic  Flat/Awesome-Patched  Awesome-FontConfig  Awesome-Mapped-FontConfig  NerdFont
  #                                                  ⬢         ⬢          ⬢          ⬢          
  p9k::register_segment "NVM" "" "magenta" "black"  $'\u2B22'  $'\u2B22'  $'\u2B22'  $'\u2B22'  $'\uE617 '
}

################################################################
# @description
#   Display the current Node version from NVM.
##
# @args
#   $1 string Alignment - left | right
#   $2 integer Segment index
#   $3 boolean Whether the segment should be joined
##
# @note
#   Only prints the segment if different than the default value.
##
prompt_nvm() {
  local node_version nvm_default is_system
  is_system=false
  (( $+functions[nvm_version] )) || return

  node_version=$(nvm_version current)
  [[ -z "${node_version}" || ${node_version} == "none" ]] && return
  if [[ "$node_version" == "system" ]]; then
    node_version="$($(nvm which system) --version)"
    is_system=true
  fi
  
  nvm_default=$(nvm_version default)
  [[ "$node_version" =~ "$nvm_default" ]] && return

  [[ "${node_version}" =~ "^v([0-9.]+)" ]] && node_version="${match[1]}"
  [[ "$is_system" == true ]] && node_version="$node_version system"

  p9k::prepare_segment "$0" "" $1 "$2" $3 "$node_version"
}
