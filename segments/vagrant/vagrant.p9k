# vim:ft=zsh ts=2 sw=2 sts=2 et fenc=utf-8
################################################################
# @title powerlevel9k Segment - Vagrant
# @source [powerlevel9k](https://github.com/bhilburn/powerlevel9k)
##

(){
  # Set the right locale to protect special characters
  local LC_ALL="" LC_CTYPE="en_US.UTF-8"
  ################################################################
  # Register segment
  # Parameters:
  #                     segment_name  context   background  foreground          Generic     Flat/Awesome-Patched  Awesome-FontConfig  Awesome-Mapped-FontConfig  NerdFont
  #
  p9k::register_segment "VAGRANT"     "UP"      "green"     "${DEFAULT_COLOR}"  'V'         'V'                   'V'                 'V'                        'V'
  p9k::register_segment "VAGRANT"     "DOWN"    "red"       "${DEFAULT_COLOR}"  'V'         'V'                   'V'                 'V'                        'V'

  ################################################################
  # Register segment default values
  p9k::set_default P9K_VAGRANT_UP_STRING "UP"
  p9k::set_default P9K_VAGRANT_DOWN_STRING "DOWN"
}

################################################################
# Shows the status of the vagrant VM (Up or Down)
prompt_vagrant() {
  local current_state="NOT_FOUND"
  local current_string
  for vagrantFolder in $(__p9k_upsearch ".vagrant" "/"); do
    # Set NULL_GLOB option on file glob to silence error message,
    # if file does not exist.
    for match in ${vagrantFolder}/.vagrant/machines/**/id(N); do
      local vmId=$(< ${match})
      if [[ $(command VBoxManage list runningvms 2>/dev/null) =~ "(${vmId})+" ]]; then
        current_state="UP"
        current_string="${P9K_VAGRANT_UP_STRING}"
      elif [[ "${current_state}" != "UP" ]]; then
        current_state="DOWN"
        current_string="${P9K_VAGRANT_DOWN_STRING}"
      fi
    done
  done

  if [[ "${current_state}" != "NOT_FOUND" ]]; then
    p9k::prepare_segment "$0" ${current_state} $1 "$2" $3 "${current_string}"
  fi
}