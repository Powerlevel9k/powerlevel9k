# vim:ft=zsh ts=2 sw=2 sts=2 et fenc=utf-8
################################################################
# @title powerlevel9k Segment - Node Version
# @source [powerlevel9k](https://github.com/bhilburn/powerlevel9k)
##

(){
  # Set the right locale to protect special characters
  local LC_ALL="" LC_CTYPE="en_US.UTF-8"
  ################################################################
  # Register segment
  # Parameters:
  #   segment_name  context  background  foreground  Generic  Flat/Awesome-Patched  Awesome-FontConfig  Awesome-Mapped-FontConfig  NerdFont
  #                                                         ⬢         ⬢          ⬢          ⬢          
  p9k::register_segment "NODE_VERSION" "" "green" "white"  $'\u2B22'  $'\u2B22'  $'\u2B22'  $'\u2B22'  $'\uE617 '
}

################################################################
# @description
#   Display the current Node version.
##
# @args
#   $1 string Alignment - left | right
#   $2 integer Segment index
#   $3 boolean Whether the segment should be joined
##
p9k::set_default P9K_NODE_VERSION_PROJECT_ONLY=false
prompt_node_version() {
  if [ "$P9K_NODE_VERSION_PROJECT_ONLY" = true ] ; then
    local foundProject=false # Variable to stop searching if a project is found
    local currentDir=$(pwd)  # Variable to iterate through the path ancestry tree

    # Search as long as no project could been found or until the root directory 
    # has been reached
    while [ "$foundProject" = false -a ! "$currentDir" = "/" ] ; do
      # Check if directory contains a project description
      if [[ -e "$currentDir/package.json" ]] ; then
        foundProject=true
        break
      fi
      # Go to the parent directory
      currentDir="$(dirname "$currentDir")"
    done
  fi

  # Show version if a project has been found, or set to always show
  if [ "$P9K_NODE_VERSION_PROJECT_ONLY" != true -o "$foundProject" = true ] ; then
    # Get the node version
    local node_version=$(node -v 2>/dev/null)

    # Return if node is not installed
    [[ -z "${node_version}" ]] && return

    p9k::prepare_segment "$0" "" $1 "$2" $3 "${node_version:1}"
  fi
}
