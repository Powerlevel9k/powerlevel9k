# vim:ft=zsh ts=2 sw=2 sts=2 et fenc=utf-8
################################################################
# @title powerlevel9k Segment - VPN IP
# @source [powerlevel9k](https://github.com/bhilburn/powerlevel9k)
##

(){
  # Set the right locale to protect special characters
  local LC_ALL="" LC_CTYPE="en_US.UTF-8"
  ################################################################
  # Register segment
  # Parameters:
  #   segment_name  context  background  foreground  Generic  Flat/Awesome-Patched  Awesome-FontConfig  Awesome-Mapped-FontConfig  NerdFont
  #                                                                                                                          
  p9k::register_segment "VPN_IP" "" "cyan" "${DEFAULT_COLOR}"  '(vpn)'  '(vpn)'  $'\uF023'  '\u'${CODEPOINT_OF_AWESOME_LOCK}  $'\uF023'

  ################################################################
  # Register segment default values
  p9k::set_default P9K_VPN_IP_INTERFACE "tun"
}

################################################################
# @description
#   Segment to display if the VPN is active.
##
# @args
#   $1 string Alignment - left | right
#   $2 integer Segment index
#   $3 boolean Whether the segment should be joined
#   $4 Root Prefix: string - Root prefix for testing purposes
##
prompt_vpn_ip() {
  local ROOT_PREFIX="${4}"
  local ip=$(p9k::parseIp "${P9K_VPN_IP_INTERFACE}" "${ROOT_PREFIX}")

  if [[ -n "${ip}" ]]; then
    p9k::prepare_segment "$0" "" $1 "$2" $3 "$ip"
  fi
}
