# vim:ft=zsh ts=2 sw=2 sts=2 et fenc=utf-8
################################################################
# @title powerlevel9k Autoload Function - __p9k_segment_should_be_joined
# @sources
#   [powerlevel9k](https://github.com/bhilburn/powerlevel9k)
##
# @info
#   This file contains the __p9k_segment_should_be_joined autoload
#   function for the powerlevel9k ZSH theme.
##

setopt localoptions # extendedglob

###############################################################
# @description
#   A helper function to determine if a segment should be
#   joined or promoted to a full one.
##
# @args
#   $1 integer The array index of the current segment.
#   $2 integer The array index of the last printed segment.
#   $3 array The array of segments of the left or right prompt.
##
# @returns
#   0 If the segments should be joined
#   1 If the segments should not be joined
##

# @function __p9k_segment_should_be_joined() {}
local current_index=$1
local last_segment_index=$2
# Explicitly split the elements by whitespace.
local -a elements
elements=(${=3})

local raw_current_segment=${elements[$current_index]}
local -a current_segment=(${(s.::.)raw_current_segment})
local joined=false
if p9k::segment_is_tagged_as "joined" "${current_segment}"; then
  joined=true
  # promote segment to a full one, if the predecessing full segment
  # was conditional. So this can only be the case for segments that
  # are not our direct predecessor.
  if (( $((${current_index} - $last_segment_index)) > 1)); then
    # Now we have to examine every previous segment, until we reach
    # the last printed one (found by its index). This is relevant if
    # all previous segments are joined. Then we want to join our
    # segment as well.
    local examined_index=$((current_index - 1))
    while (( ${examined_index} > ${last_segment_index} )); do
      local raw_previous_segment=${elements[$examined_index]}
      local -a previous_segment=(${(s.::.)raw_previous_segment})
      # If one of the examined segments is not joined, then we know
      # that the current segment should not be joined, as the target
      # segment is the wrong one.
      if ! p9k::segment_is_tagged_as "joined" "${previous_segment}"; then
        joined=false
        break
      fi
      examined_index=$((examined_index - 1))
    done
  fi
fi

# Return 1 means error; return 0 means no error. So we have
# to invert $joined
if [[ "$joined" == "true" ]]; then
  return 0
else
  return 1
fi
